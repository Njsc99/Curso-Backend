<div class="bg-primary text-white py-4">
  <div class="container">
    <div class="row">
      <div class="col-12">
        <h1 class="h2 mb-1">
          <i class="bi bi-grid"></i> Cat√°logo de Productos
        </h1>
        <p class="mb-0 opacity-75">
          Explora nuestros {{pagination.totalDocs}} productos disponibles
        </p>
      </div>
    </div>
  </div>
</div>

<div class="bg-light py-3">
  <div class="container">
    <form method="GET" class="row g-3">
      <div class="col-md-4">
        <div class="input-group">
          <span class="input-group-text"><i class="bi bi-search"></i></span>
          <input type="text" class="form-control" name="query" placeholder="Buscar productos..." value="{{filters.query}}">
        </div>
      </div>
      <div class="col-md-2">
        <select class="form-select" name="category">
          <option value="">Todas las categor√≠as</option>
          <option value="Electr√≥nicos" {{#if (eq filters.category 'Electr√≥nicos')}}selected{{/if}}>Electr√≥nicos</option>
          <option value="Ropa" {{#if (eq filters.category 'Ropa')}}selected{{/if}}>Ropa</option>
          <option value="Hogar" {{#if (eq filters.category 'Hogar')}}selected{{/if}}>Hogar</option>
          <option value="Deportes" {{#if (eq filters.category 'Deportes')}}selected{{/if}}>Deportes</option>
        </select>
      </div>
      <div class="col-md-2">
        <select class="form-select" name="sort">
          <option value="">Ordenar por</option>
          <option value="asc" {{#if (eq filters.sort 'asc')}}selected{{/if}}>Precio: menor a mayor</option>
          <option value="desc" {{#if (eq filters.sort 'desc')}}selected{{/if}}>Precio: mayor a menor</option>
        </select>
      </div>
      <div class="col-md-2">
        <select class="form-select" name="status">
          <option value="">Disponibilidad</option>
          <option value="true" {{#if (eq filters.status 'true')}}selected{{/if}}>Disponible</option>
          <option value="false" {{#if (eq filters.status 'false')}}selected{{/if}}>No disponible</option>
        </select>
      </div>
      <div class="col-md-2">
        <button type="submit" class="btn btn-primary w-100">
          <i class="bi bi-funnel"></i> Filtrar
        </button>
      </div>
    </form>
  </div>
</div>


<div class="container py-4">
  {{#if products.length}}
    <div class="row mb-4">
      <div class="col-md-8">
        <p class="mb-0 text-muted">
          Mostrando {{pagination.limit}} de {{pagination.totalDocs}} productos 
          (P√°gina {{pagination.currentPage}} de {{pagination.totalPages}})
        </p>
      </div>
      <div class="col-md-4 text-end">
        <a href="/realtimeproducts" class="btn btn-outline-primary">
          <i class="bi bi-lightning"></i> Vista Tiempo Real
        </a>
      </div>
    </div>
    <div class="row g-4">
      {{#each products}}
      <div class="col-lg-3 col-md-4 col-sm-6">
        <div class="card h-100">
          {{#if (hasItems thumbnails)}}
          <img src="{{first thumbnails}}" class="card-img-top" alt="{{title}}" style="height: 200px; object-fit: cover;">
          {{else}}
          <div class="card-img-top bg-light d-flex align-items-center justify-content-center" style="height: 200px;">
            <i class="bi bi-image text-muted" style="font-size: 2rem;"></i>
          </div>
          {{/if}}
          
          <div class="card-body d-flex flex-column">
            <h6 class="card-title">{{title}}</h6>
            <p class="card-text small text-muted">{{category}}</p>
            <p class="card-text flex-grow-1 small">{{description}}</p>
            
            <div class="mt-auto">
              <div class="d-flex justify-content-between align-items-center mb-2">
                <span class="h5 text-primary mb-0">${{price}}</span>
                {{#if status}}
                  <span class="badge bg-success">Stock: {{stock}}</span>
                {{else}}
                  <span class="badge bg-secondary">Agotado</span>
                {{/if}}
              </div>
              
              <div class="d-grid gap-2">
                <a href="/products/{{id}}" class="btn btn-outline-primary btn-sm">
                  <i class="bi bi-eye"></i> Ver detalles
                </a>
                {{#if status}}
                <button class="btn btn-primary btn-sm" onclick="addToCart('{{id}}')">
                  <i class="bi bi-cart-plus"></i> Agregar al carrito
                </button>
                {{/if}}
              </div>
            </div>
          </div>
        </div>
      </div>
      {{/each}}
    </div>

    {{#if (gt pagination.totalPages 1)}}
    <nav aria-label="Navegaci√≥n de productos" class="mt-5">
      <ul class="pagination justify-content-center">
        {{#if pagination.hasPrevPage}}
        <li class="page-item">
          <a class="page-link" href="{{pagination.prevLink}}" aria-label="Anterior">
            <span aria-hidden="true">&laquo;</span>
          </a>
        </li>
        {{/if}}
        
        {{#if pagination.hasNextPage}}
        <li class="page-item">
          <a class="page-link" href="{{pagination.nextLink}}" aria-label="Siguiente">
            <span aria-hidden="true">&raquo;</span>
          </a>
        </li>
        {{/if}}
      </ul>
    </nav>
    {{/if}}
  {{else}}
    <div class="text-center py-5">
      <i class="bi bi-box text-muted" style="font-size: 4rem;"></i>
      <h3 class="mt-3 text-muted">No se encontraron productos</h3>
      <p class="text-muted">Prueba cambiando los filtros de b√∫squeda.</p>
      <a href="/" class="btn btn-primary">Ver todos los productos</a>
    </div>
  {{/if}}
</div>

<style>
.text-purple {
  color: #6f42c1 !important;
}

.border-purple {
  border-color: #6f42c1 !important;
}

.card {
  transition: transform 0.3s ease, box-shadow 0.3s ease;
}

.card:hover {
  transform: translateY(-5px);
  box-shadow: 0 8px 25px rgba(0,0,0,0.1) !important;
}

section {
  scroll-margin-top: 80px;
}
</style>

<script>
async function addToCart(productId) {
  const { value: cartId } = await Swal.fire({
    title: 'üõí ¬øD√≥nde lo agregamos?',
    text: 'Ingresa tu c√≥digo de carrito o deja vac√≠o para crear uno nuevo',
    input: 'text',
    inputPlaceholder: 'C√≥digo de tu carrito (opcional)',
    showCancelButton: true,
    confirmButtonText: 'Agregar producto',
    cancelButtonText: 'Cancelar',
    confirmButtonColor: '#28a745',
    cancelButtonColor: '#6c757d',
    inputValidator: (value) => {
      if (value && value.length < 10) {
        return 'El c√≥digo debe tener al menos 10 caracteres'
      }
    }
  });

  if (cartId === undefined) return;
  
  try {
    let targetCartId = cartId ? cartId.trim() : '';
    
    if (!targetCartId) {
      Swal.fire({
        title: 'Creando carrito...',
        text: 'Por favor espera',
        allowOutsideClick: false,
        didOpen: () => {
          Swal.showLoading()
        }
      });

      const createResponse = await fetch('/api/carts', {
        method: 'POST',
        headers: {
          'Content-Type': 'application/json'
        }
      });
      
      if (createResponse.ok) {
        const createResult = await createResponse.json();
        targetCartId = createResult.payload.id;
        
        await Swal.fire({
          icon: 'success',
          title: '¬°Listo! üéâ',
          text: `Tu carrito est√° creado. C√≥digo: ${targetCartId}`,
          confirmButtonColor: '#28a745'
        });
      } else {
        throw new Error('Error al crear carrito');
      }
    }
    
    // Mostrar loading mientras se agrega el producto
    Swal.fire({
      title: 'Agregando...',
      text: 'Un momentito ‚ú®',
      allowOutsideClick: false,
      didOpen: () => Swal.showLoading()
    });

    // Agregar producto al carrito
    const response = await fetch(`/api/carts/${targetCartId}/products/${productId}`, {
      method: 'POST',
      headers: {
        'Content-Type': 'application/json'
      },
      body: JSON.stringify({ quantity: 1 })
    });
    
    if (response.ok) {
      const result = await response.json();
      
      const viewCart = await Swal.fire({
        icon: 'success',
        title: '¬°Agregado! üéâ',
        text: 'El producto ya est√° en tu carrito',
        footer: `C√≥digo del carrito: ${targetCartId}`,
        showCancelButton: true,
        confirmButtonText: 'Ver mi carrito',
        cancelButtonText: 'Seguir comprando',
        confirmButtonColor: '#28a745',
        cancelButtonColor: '#6c757d'
      });

      if (viewCart.isConfirmed) {
        window.location.href = `/carts/${targetCartId}`;
      }
    } else {
      const error = await response.json();
      await Swal.fire({
        icon: 'error',
        title: 'Oops...',
        text: error.error || 'Algo sali√≥ mal, intenta nuevamente',
        confirmButtonColor: '#dc3545'
      });
    }
  } catch (error) {
    console.error('Error:', error);
    await Swal.fire({
      icon: 'error',
      title: 'Sin conexi√≥n',
      text: 'Revisa tu conexi√≥n e intenta nuevamente',
      confirmButtonColor: '#dc3545'
    });
  }
}
</script>

